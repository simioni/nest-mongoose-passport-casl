import { NestFactory } from '@nestjs/core';
import { NestExpressApplication } from '@nestjs/platform-express';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import expressRateLimit from 'express-rate-limit';
import helmet from 'helmet';

import { AppModule } from './app.module';

async function bootstrap() {
  const app = await NestFactory.create<NestExpressApplication>(AppModule);

  /**********************************
   *
   * Security
   *
   ******************************* */
  // app.enable('trust proxy'); // See: https://github.com/express-rate-limit/express-rate-limit/wiki/Troubleshooting-Proxy-Issues
  app.use(helmet());

  app.use(
    expressRateLimit({
      windowMs: 15 * 60 * 1000, // 15 minutes
      max: 100, // limit each IP to 100 requests per windowMs
      message: 'Too many requests from this IP, please try again later',
    }),
  );
  const createAccountLimiter = expressRateLimit({
    windowMs: 60 * 60 * 1000, // 1 hour window
    max: 3, // start blocking after 3 requests
    message: 'Too many accounts created from this IP, please try again later',
  });
  app.use('/auth/email/register', createAccountLimiter);

  /**********************************
   *
   * Open API Auto Documentation
   *
   ******************************* */
  const config = new DocumentBuilder()
    .setTitle('API Live Documentation')
    .setDescription(
      'Auto generated by @nestjs/swagger following the Open API specification.',
    )
    .setVersion('1.0')
    .addTag('auth')
    .addTag('users')
    .addBearerAuth()
    .build();

  const swaggerUiOptions = {
    explorer: true,
    swaggerOptions: {
      persistAuthorization: true,
      defaultModelsExpandDepth: 0, // set to -1 to hide the 'Schemas' section from docs
    },
  };
  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('api', app, document, swaggerUiOptions);

  await app.listen(3000);
}
bootstrap();
